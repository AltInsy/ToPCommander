// ---------------------------------------------------------------------------

// This software is Copyright (c) 2015 Embarcadero Technologies, Inc.
// You may only use this software if you are an authorized licensee
// of an Embarcadero developer tools product.
// This software is considered a Redistributable as defined under
// the software license agreement that comes with the Embarcadero Products
// and is subject to that software license agreement.

// ---------------------------------------------------------------------------

unit Main_u;

interface

uses
  Winapi.Windows,
  Winapi.Messages,
  System.SysUtils,
  System.Variants,
  System.Classes,
  System.ImageList,
  System.Actions,
  Vcl.Graphics,
  Vcl.Controls,
  Vcl.Forms,
  Vcl.Dialogs,
  Vcl.ExtCtrls,
  Vcl.WinXCtrls,
  Vcl.StdCtrls,
  Vcl.CategoryButtons,
  Vcl.Buttons,
  Vcl.ImgList,
  Vcl.Imaging.PngImage,
  Vcl.ComCtrls,
  Vcl.ActnList;

type
  TfrmMain = class(TForm)
    pnlToolbar: TPanel;
    pnlWork: TPanel;
    svwMenu: TSplitView;
    catMenuItems: TCategoryButtons;
    imlIcons: TImageList;
    imgMenu: TImage;
    alstMenu: TActionList;
    actItemInfo: TAction;
    actSkillInfo: TAction;
    actNPC: TAction;
    lblTitle: TLabel;
    actMissions: TAction;
    actMaps: TAction;
    actCharacters: TAction;
    actAccounts: TAction;
    actDataBase: TAction;
    actCfgMaker: TAction;
    actCompiler: TAction;
    actAbout: TAction;
    procedure svwMenuClosed(Sender: TObject);
    procedure svwMenuOpened(Sender: TObject);
    procedure svwMenuOpening(Sender: TObject);
    procedure catMenuItemsCategoryCollapase(Sender: TObject;
      const Category: TButtonCategory);
    procedure imgMenuClick(Sender: TObject);
    procedure FormResize(Sender: TObject);
  private
  public
  end;

var
  frmMain: TfrmMain;

implementation

uses
  Vcl.Themes;

{$R *.dfm}

procedure TfrmMain.FormResize(Sender: TObject);
begin
  if frmMain.Width > 500 then
    svwMenu.Width := 1
  else
    svwMenu.Width := 150;

end;

procedure TfrmMain.imgMenuClick(Sender: TObject);
begin
  if svwMenu.Opened then
    svwMenu.Close
  else
    svwMenu.Open;
end;

procedure TfrmMain.svwMenuClosed(Sender: TObject);
begin
  // When TSplitView is closed, adjust ButtonOptions and Width
  catMenuItems.ButtonOptions := catMenuItems.ButtonOptions - [boShowCaptions];
  if svwMenu.CloseStyle = svcCompact then
    catMenuItems.Width := svwMenu.CompactWidth;
end;

procedure TfrmMain.svwMenuOpened(Sender: TObject);
begin
  // When not animating, change size of catMenuItems when TSplitView is opened
  catMenuItems.ButtonOptions := catMenuItems.ButtonOptions + [boShowCaptions];
  // catMenuItems.Width := SV.OpenedWidth;
end;

procedure TfrmMain.svwMenuOpening(Sender: TObject);
begin
  // When animating, change size of catMenuItems at the beginning of open
  catMenuItems.ButtonOptions := catMenuItems.ButtonOptions + [boShowCaptions];
  // catMenuItems.Width := SV.OpenedWidth;
end;

procedure TfrmMain.catMenuItemsCategoryCollapase(Sender: TObject;
  const Category: TButtonCategory);
begin
  // Prevent the catMenuItems Category group from being collapsed
  catMenuItems.Categories[0].Collapsed := False;
end;

end.
